name: リリース自動化

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Pythonのセットアップ
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 依存関係のインストール
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: パッケージのビルド
        run: python -m build

      - name: バージョン取得
        id: get_version
        run: echo "version=$(python -c "import tomli; print(tomli.load(open('pyproject.toml', 'rb'))['project']['version'])")" >> $GITHUB_OUTPUT

      - name: コミットログからリリースノート生成
        id: generate_release_notes
        run: |
          # 最新のタグを取得
          latest_tag=$(git describe --tags --abbrev=0 --exclude=${{ github.ref_name }} || echo "")
          
          if [ -z "$latest_tag" ]; then
            # 初回リリースの場合
            echo "release_notes<<EOF" >> $GITHUB_OUTPUT
            echo "## 初回リリース" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            git log --pretty=format:"* %s (%h)" --no-merges >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            # 2回目以降のリリース
            echo "release_notes<<EOF" >> $GITHUB_OUTPUT
            echo "## 変更点" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            git log --pretty=format:"* %s (%h)" --no-merges $latest_tag..HEAD >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: リリース作成
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.get_version.outputs.version }}
          body: ${{ steps.generate_release_notes.outputs.release_notes }}
          draft: false
          prerelease: false
          files: |
            dist/*.whl
            dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 